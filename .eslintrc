{
  "settings": {
    "import/resolver": {
      "typescript": {}
    }
  },
  "parser": "@typescript-eslint/parser",
  "plugins": ["prettier", "import", "typescript-sort-keys"],
  "extends": [
    "airbnb-typescript/base",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:prettier/recommended",
    "prettier"
  ],
  "parserOptions": {
    "ecmaVersion": 2022,
    "project": "./tsconfig.json",
    "tsconfigRootDir": "./"
  },
  "root": true,
  "env": {
    "node": true,
    "es6": true,
    "mocha": true
  },
  "rules": {
    "no-return-await": "off",
    "no-var": "error",
    "no-debugger": "error",
    "no-console": "off",
    "no-restricted-syntax": ["off", "ForOfStatement"],
    "lines-between-class-members": "off",
    "class-methods-use-this": "off",
    "quotes": ["error", "single"],
    "semi": ["error", "always"],
    "object-curly-spacing": ["error", "always"],
    "key-spacing": ["error", { "afterColon": true }],
    "no-multi-spaces": "error",
    "sort-imports": ["error", { "ignoreDeclarationSort": true }],
    "import/no-extraneous-dependencies": ["error", { "devDependencies": true }],
    "import/prefer-default-export": "off",
    "import/no-duplicates": ["error", { "considerQueryString": true }],
    "import/order": [
      "error",
      {
        "groups": ["builtin", "external", "internal", "parent", "sibling"],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "import/exports-last": ["error"],
    "import/newline-after-import": ["error"],
    "padding-line-between-statements": [
      "error",
      { "blankLine": "always", "prev": "*", "next": "return" },
      { "blankLine": "always", "prev": ["const", "let", "var"], "next": "*" },
      {
        "blankLine": "any",
        "prev": ["const", "let", "var"],
        "next": ["const", "let", "var"]
      }
    ],
    "prettier/prettier": "error",
    "@typescript-eslint/return-await": ["error", "in-try-catch"],
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/unbound-method": "off",
    "@typescript-eslint/no-misused-promises": "off",
    "@typescript-eslint/no-unsafe-member-access": "off",
    "@typescript-eslint/no-unsafe-call": "off",
    "@typescript-eslint/member-ordering": [
      "error",
      {
        "default": {
          "memberTypes": [
            // Index signature
            "signature",

            // Fields
            "public-instance-field",
            "protected-instance-field",
            "private-instance-field",
            "public-static-field",
            "protected-static-field",
            "private-static-field",
            "public-abstract-field",
            "protected-abstract-field",
            "field",

            // Constructors
            "public-constructor",
            "protected-constructor",
            "private-constructor",
            "constructor",

            // Getters
            "public-instance-get",
            "protected-instance-get",
            "private-instance-get",
            "public-static-get",
            "protected-static-get",
            "private-static-get",
            "public-abstract-get",
            "protected-abstract-get",
            "get",

            // Setters
            "public-instance-set",
            "protected-instance-set",
            "private-instance-set",
            "public-static-set",
            "protected-static-set",
            "private-static-set",
            "public-abstract-set",
            "protected-abstract-set",
            "set",

            // Methods
            "public-instance-method",
            "protected-instance-method",
            "private-instance-method",
            "public-static-method",
            "protected-static-method",
            "private-static-method",
            "public-abstract-method",
            "protected-abstract-method",
            "method"
          ],
          "order": "alphabetically"
        }
      }
    ],
    "@typescript-eslint/lines-between-class-members": [
      "error",
      "always",
      { "exceptAfterSingleLine": true }
    ],
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "ts": "never"
      }
    ],
    "typescript-sort-keys/interface": "off",
    "typescript-sort-keys/string-enum": "error"
  }
}
